##############################
# Configure networking and basic stats collection
##############################

# TODO: Remove when nomad installation is factored out
- name: Install boring starter packages
  apt:
    pkg:
      - 'unzip'

##############################
# Configure networking and basic stats collection
##############################

- name: Set up static address and networking
  when: is_production|bool
  block:
    - name: Find default netplan config
      find:
        paths: '/etc/netplan'
        patterns: '[0-9]*'
      register: default_netplan_config

    - name: Remove default netplan config
      file:
        path: '{{ item.path }}'
        state: absent
      with_items: '{{ default_netplan_config.files }}'

    - name: Install netplan config
      copy:
        src: netplan.yml
        dest: /etc/netplan/netplan.yaml
        owner: root
        group: root
        mode: '644'

    - name: Write hostname file
      template:
        src: hostname
        dest: /etc/hostname
        mode: '0644'
      notify: hostname

- name: Install node-exporter
  apt:
    pkg:
      - 'prometheus-node-exporter'

##############################
# Configure server storage
##############################

- name: Install ZFS Ubuntu support
  when: is_production|bool
  apt:
    name:
      - zfs-dkms
      - zfsutils-linux

- name: Make storage root
  file:
    path: /storage
    state: directory
    owner: root
    group: root
    mode: '755'

##############################
# Install control plane packages
##############################

- name: Create package download directory
  file:
    path: /var/download
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create cluster control data directory
  file:
    path: /storage/cluster
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create Nomad group
  group:
    name: nomad
    state: present
    system: true

- name: Create Nomad user
  user:
    name: nomad
    group: nomad
    create_home: false
    password_lock: true
    system: true
    home: /etc/nomad.d

- name: Create Nomad data directory
  file:
    path: /storage/cluster/nomad
    state: directory
    owner: nomad
    group: nomad
    mode: '0750'

- name: Install Nomad systemd service
  copy:
    src: nomad/nomad.service
    dest: /etc/systemd/system
    mode: '644'
  notify:
    - 'enable nomad'

- name: Fetch Nomad
  get_url:
    url: '{{ control_packages.nomad.url }}'
    checksum: '{{ control_packages.nomad.sum }}'
    dest: '/var/download/{{ control_packages.nomad.filename }}'
  notify:
    - 'restart nomad'

- name: Install Nomad binary
  unarchive:
    src: '/var/download/{{ control_packages.nomad.filename }}'
    dest: /usr/local/sbin
    remote_src: yes
    owner: root
    group: root

- name: Install Nomad server config
  template:
    src: nomad/nomad.hcl
    dest: /etc/nomad.d/
    owner: nomad
    group: nomad
    mode: '640'
  notify:
    - 'restart nomad'

##############################
# Turn on Docker
##############################

- name: Configure Docker upstream APT repository
  block:
    - name: Get Docker upstream APT GPG key
      apt_key:
        id: '{{ docker_apt_key }}'
        keyserver: 'hkp://pool.sks-keyservers.net'
        state: present

    - name: Configure Docker upstream APT repository
      apt_repository:
        repo: '{{ docker_repository }}'
        update_cache: True
        state: present
  # TODO: Hack to get newer Docker in Ubuntu LTS before 20.04
  when: ansible_distribution_release != 'focal'

- name: Install Docker
  apt:
    pkg:
      - 'docker.io'
      - 'docker-compose'

- name: Add users to Docker usage group
  user:
    name: '{{ item }}'
    groups: 'docker'
    append: True
  with_items: '{{ docker_users|list }}'
  when: docker_users | length > 0

##############################
# Configure letsencrypt support
##############################

- name: Make directory for crypto material
  file:
    path: /storage/tls
    state: directory
    owner: root
    group: www-data
    mode: '2750'

- name: Install letsencrypt renewal script
  copy:
    src: letsencrypt/gencerts
    dest: /usr/local/sbin
    mode: '750'

- name: Install letsencrypt renewal script systemd service
  copy:
    src: letsencrypt/gencerts.service
    dest: /etc/systemd/system
    mode: '644'
  notify:
    - 'enable letsencrypt gencerts'

- name: Install letsencrypt renewal script systemd timer
  copy:
    src: letsencrypt/gencerts.timer
    dest: /etc/systemd/system
    mode: '644'
  notify:
    - 'enable letsencrypt gencerts timer'

##############################
# Turn on prometheus
##############################

- name: Make prometheus storage directory
  file:
    path: /storage/cluster/prometheus
    state: directory
    owner: nobody
    group: nogroup
    mode: '750'

- name: Make prometheus config directory
  file:
    path: /config/prometheus
    state: directory
    owner: root
    group: adm
    mode: '751'

- name: Make alertmanager storage directory
  file:
    path: /storage/alertmanager
    state: directory
    owner: nobody
    group: nogroup  # alertmanager is hard-coded to run as nobody:nogroup
    mode: '750'

- name: Install alertmanager config
  copy:
    src: prometheus/alertmanager.yml
    dest: /config/prometheus
    owner: root
    group: nogroup  # alertmanager is hard-coded to run as nobody:nogroup
    mode: '640'

##############################
# Turn on grafana
##############################

- name: Make grafana storage directory
  file:
    path: /storage/cluster/grafana
    state: directory
    owner: '472'
    group: '472'  # Ew, fix this UID/GID
    mode: '750'

##############################
# Turn on matrix/synapse
##############################

- name: Create matrix server group
  group:
    name: matrix
    state: present
    system: true

- name: Create matrix server user
  user:
    name: matrix
    group: matrix
    groups: ['www-data']
    create_home: false
    password_lock: true
    system: true
    home: /storage/matrix

- name: Make matrix server storage directory
  file:
    path: /storage/matrix
    state: directory
    owner: matrix
    group: matrix
    mode: '700'

- name: Install matrix server config
  copy:
    src: synapse.yml
    dest: /storage/matrix/homeserver.yaml
    owner: matrix
    group: matrix
    mode: '600'

##############################
# Turn on Plex
##############################

- name: Create video server group
  group:
    name: idiotbox
    state: present
    system: true

- name: Create video server user
  user:
    name: idiotbox
    group: idiotbox
    create_home: false
    password_lock: true
    system: true
    home: /storage/media/plex

- name: Make video server storage directory
  file:
    path: /storage/media/plex
    state: directory
    owner: idiotbox
    group: idiotbox
    mode: '2775'

- name: Make video server work directories
  file:
    path: /storage/media/{{ item }}
    state: directory
    owner: idiotbox
    group: idiotbox
    mode: '2770'
  with_items:
    - 'plex-system'
    - 'plex-transcode'

##############################
# Turn on Moneydance VNC server
##############################

- name: Create Moneydance group
  group:
    name: moneydance
    state: present

- name: Create Moneydance user
  user:
    name: moneydance
    group: moneydance
    create_home: false
    password_lock: true
    home: /storage/users/moneydance

- name: Make Moneydance storage directory
  file:
    path: /storage/users/moneydance
    state: directory
    owner: moneydance
    group: moneydance
    mode: '2770'

##############################
# Gather user/group data
##############################

# It's a hack that we gather getent at this stage; we're counting on
# only using it for these environment variables and not above

- name: Get user database
  getent:
    database: passwd

- name: Get group database
  getent:
    database: group

- name: Install Moneydance environment config
  template:
    src: moneydance.env
    dest: /config/
    owner: root
    group: adm
    mode: '640'

- name: Install Plex environment config
  template:
    src: plex.env
    dest: /config/
    owner: root
    group: adm
    mode: '640'

- name: Install Synapse environment config
  template:
    src: synapse.env
    dest: /config/
    owner: root
    group: adm
    mode: '640'
